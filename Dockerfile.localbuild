## Bulding the image
# docker build -f Dockerfile.localbuild -t dreamland/localbuild:latest
#
#
## Running the build 
# 
# Use the command below to start a detached container in the background:
# docker run -v /opt/projects/dreamland:/home/dreamland --name dlbuild -dit dreamland/localbuild:latest
#
# Use this command to attach to its shell:
# docker exec -it dlbuild /bin/bash
# 
# Run the usual build commands for Ubuntu, as per project README.
#

FROM ubuntu:focal as dreamland

USER root

# Install common build tools and DL-specific libs, configure locales.
RUN apt-get update \
    && apt-get install -yq git g++ gcc ccache make automake libtool bison flex db-util bzip2 \
    && apt-get install -yq libcrypto++-dev libjsoncpp-dev libdb5.3 libdb5.3-dev libdb5.3++ libdb5.3++-dev zlib1g zlib1g-dev libssl-dev libfl-dev

# Wrap all compilers with compiler cache:
RUN ln -s /usr/bin/ccache /usr/local/bin/gcc \
    && ln -s /usr/bin/ccache /usr/local/bin/g++ \
    && ln -s /usr/bin/ccache /usr/local/bin/cc \
    && ln -s /usr/bin/ccache /usr/local/bin/c++

# Ensure container doesn't exit when an interactive shell is terminated
CMD tail -f /dev/null

